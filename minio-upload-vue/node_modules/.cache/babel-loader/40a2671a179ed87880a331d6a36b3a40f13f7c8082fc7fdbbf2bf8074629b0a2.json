{"ast":null,"code":"import { md5 } from './md5';\nexport default {\n  methods: {\n    handleHttpRequest(options) {\n      const {\n        file,\n        onSuccess,\n        onError,\n        onProgress\n      } = options;\n      const chunkSize = 1024 * 1024 * 5;\n      const chunks = Math.ceil(file.size / chunkSize);\n      let currentChunk = 0;\n      const uploadNext = () => {\n        const start = currentChunk * chunkSize;\n        const end = Math.min(file.size, start + chunkSize);\n        const fileChunk = file.slice(start, end);\n        const formData = new FormData();\n        formData.append('file', fileChunk);\n        formData.append('filename', file.name);\n        formData.append('chunk', currentChunk + 1);\n        formData.append('chunks', chunks);\n        formData.append('md5', md5(fileChunk));\n        // 上传\n        // axios.post('/upload', formData, {\n        //     onUploadProgress: (progressEvent) => {\n        //         onProgress({\n        //             percent: Math.round((progressEvent.loaded / progressEvent.total) * 100)\n        //         })\n        //     }\n        // }).then(res => {\n        //     currentChunk++\n        //     if (currentChunk < chunks) {\n      };\n    }\n  }\n};","map":{"version":3,"names":["md5","methods","handleHttpRequest","options","file","onSuccess","onError","onProgress","chunkSize","chunks","Math","ceil","size","currentChunk","uploadNext","start","end","min","fileChunk","slice","formData","FormData","append","name"],"sources":["src/views/UploadView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-upload \r\n        class=\"upload-demo\" \r\n        drag \r\n        action=\"https://jsonplaceholder.typicode.com/posts/\" \r\n        multiple\r\n        :http-request = handleHttpRequest>\r\n            <i class=\"el-icon-upload\"></i>\r\n            <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\r\n        </el-upload>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {md5} from './md5'\r\n\r\n    export default {\r\n        methods: {\r\n            handleHttpRequest(options) {\r\n                const {file, onSuccess, onError, onProgress} = options\r\n                const chunkSize = 1024 * 1024 * 5\r\n                const chunks = Math.ceil(file.size / chunkSize)\r\n                let currentChunk = 0\r\n                const uploadNext = () => {\r\n                    const start = currentChunk * chunkSize\r\n                    const end = Math.min(file.size, start + chunkSize)\r\n                    const fileChunk = file.slice(start, end)\r\n                    const formData = new FormData()\r\n                    formData.append('file', fileChunk)\r\n                    formData.append('filename', file.name)\r\n                    formData.append('chunk', currentChunk + 1)\r\n                    formData.append('chunks', chunks)\r\n                    formData.append('md5', md5(fileChunk))\r\n                    // 上传\r\n                    // axios.post('/upload', formData, {\r\n                    //     onUploadProgress: (progressEvent) => {\r\n                    //         onProgress({\r\n                    //             percent: Math.round((progressEvent.loaded / progressEvent.total) * 100)\r\n                    //         })\r\n                    //     }\r\n                    // }).then(res => {\r\n                    //     currentChunk++\r\n                    //     if (currentChunk < chunks) {\r\n                        \r\n                    }\r\n                }\r\n            }\r\n        }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAeA,SAAAA,GAAA;AAEA;EACAC,OAAA;IACAC,kBAAAC,OAAA;MACA;QAAAC,IAAA;QAAAC,SAAA;QAAAC,OAAA;QAAAC;MAAA,IAAAJ,OAAA;MACA,MAAAK,SAAA;MACA,MAAAC,MAAA,GAAAC,IAAA,CAAAC,IAAA,CAAAP,IAAA,CAAAQ,IAAA,GAAAJ,SAAA;MACA,IAAAK,YAAA;MACA,MAAAC,UAAA,GAAAA,CAAA;QACA,MAAAC,KAAA,GAAAF,YAAA,GAAAL,SAAA;QACA,MAAAQ,GAAA,GAAAN,IAAA,CAAAO,GAAA,CAAAb,IAAA,CAAAQ,IAAA,EAAAG,KAAA,GAAAP,SAAA;QACA,MAAAU,SAAA,GAAAd,IAAA,CAAAe,KAAA,CAAAJ,KAAA,EAAAC,GAAA;QACA,MAAAI,QAAA,OAAAC,QAAA;QACAD,QAAA,CAAAE,MAAA,SAAAJ,SAAA;QACAE,QAAA,CAAAE,MAAA,aAAAlB,IAAA,CAAAmB,IAAA;QACAH,QAAA,CAAAE,MAAA,UAAAT,YAAA;QACAO,QAAA,CAAAE,MAAA,WAAAb,MAAA;QACAW,QAAA,CAAAE,MAAA,QAAAtB,GAAA,CAAAkB,SAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MAEA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}